{"remainingRequest":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\babel-loader\\lib\\index.js!E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\src\\views\\DataExpore.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\src\\views\\DataExpore.vue","mtime":1618220160000},{"path":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001368654},{"path":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"E:\\大三上课程\\非关系数据库\\基于Springboot+vue的医院管理系统\\源码\\HospitalVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1689001369023}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataExpore.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"Echarts\">\n    <div id=\"orderPeople\" style=\"width: 1200px; height: 400px;\"></div>\n    <div id=\"orderSection\" style=\"width: 1200px; height: 400px;\"></div>\n    <div id=\"orderGender\" style=\"width: 540px; height: 500px;float:left\"></div>\n    <div id=\"patientAge\" style=\"width: 600px; height: 500px;float:right\"></div>\n\n\n  </div>\n</template>\n<script>\nimport request from \"@/utils/request.js\";\nexport default {\n  name: \"dataExpore\",\n  data() {\n    return {\n      sevenDate: [],\n      sevenOrder: [],\n    };\n  },\n  methods: {\n    //统计患者年龄分布\n    patientAge(){\n      var myChart = this.$echarts.init(document.getElementById(\"patientAge\"));\n      request.get(\"patient/patientAge\")\n      .then(res => {\n        var option = {\n           title: {\n        text: '患者年龄段分布',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        top: '5%',\n        left: 'center'\n    },\n    series: [\n        {\n            name: '年龄段',\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n                borderRadius: 10,\n                borderColor: '#fff',\n                borderWidth: 2\n            },\n            label: {\n                show: false,\n                position: 'center'\n            },\n            emphasis: {\n                label: {\n                    show: true,\n                    fontSize: '40',\n                    fontWeight: 'bold'\n                }\n            },\n            labelLine: {\n                show: false\n            },\n            data: [\n                {value: res.data.data[0], name: '0-9岁'},\n                {value: res.data.data[1], name: '10-19岁'},\n                {value: res.data.data[2], name: '20-29岁'},\n                {value: res.data.data[3], name: '30-39岁'},\n                {value: res.data.data[4], name: '40-49岁'},\n                {value: res.data.data[5], name: '50-59岁'},\n                {value: res.data.data[6], name: '60-69岁'},\n                {value: res.data.data[7], name: '70-79岁'},\n                {value: res.data.data[8], name: '80-89岁'},\n                {value: res.data.data[9], name: '90-99岁'},\n            ]\n        }\n    ]\n};\n       \n            \n\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n\n      })\n      .catch(err => {\n        console.error(err); \n      })\n    },\n    //统计挂号科室人数\n    orderSection(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderSection\"));\n      request.get(\"order/orderSection\")\n      .then(res => {\n        console.log(res.data.data.map((item) => item.countSection));\n        console.log(res.data.data.map((item) => item.doctor.dSection))\n        var option = {\n             title: {\n        text: '挂号科室人数统计',\n        left: 'center'\n    },\n    xAxis: {\n        type: 'category',\n        data: res.data.data.map((item) => item.doctor.dSection),\n        axisLabel: {//解决各个不显示问题\n           interval:0,\n           rotate:10,\n           }\n\n    },\n    yAxis: {\n        type: 'value'\n    },\n    series: [{\n        data: res.data.data.map((item) => item.countSection),\n        type: 'bar',\n        showBackground: true,\n        backgroundStyle: {\n            color: 'rgba(180, 180, 180, 0.2)'\n        }\n    }]\n};\n// 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n\n        \n\n      })\n      .catch(err => {\n        console.error(err); \n      })\n    },\n    //挂号男女比例\n    orderGender(){\n      var myChart = this.$echarts.init(document.getElementById(\"orderGender\"));\n      request.get(\"order/orderGender\",)\n      .then(res => {\n      var option = {\n    title: {\n        text: '患者性别比例',\n        left: 'center'\n    },\n    tooltip: {\n        trigger: 'item'\n    },\n    legend: {\n        orient: 'vertical',\n        left: 'left',\n    },\n    series: [\n        {\n            name: '人数',\n            type: 'pie',\n            radius: '50%',\n            data: [\n                {value: res.data.data.map((item) => item.countGender)[0], name: res.data.data.map((item) => item.patient.pGender)[0]},\n                {value: res.data.data.map((item) => item.countGender)[1], name: res.data.data.map((item) => item.patient.pGender)[1]},\n                \n            ],\n            emphasis: {\n                itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n            }\n        }\n    ]\n};\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n\n      })\n      .catch(err => {\n        console.error(err); \n      });\n\n\n    },\n    //获取过去num天日期\n    pastSeven(num) {\n      var date = new Date();\n      date.setDate(date.getDate() - num);\n      var time = date.getMonth() + 1 + \"-\" + date.getDate();\n      return time;\n    },\n    //挂号人数图表\n    orderPeople() {\n      var myChart = this.$echarts.init(document.getElementById(\"orderPeople\"));\n      request\n        .get(\"order/orderSeven\")\n        .then((res) => {\n          if (res.data.status !== 200)\n            return this.$message.error(\"数据请求失败！\");\n          var option = {\n            title: {\n              text: \"近20天挂号人数折线图\",\n              left: \"5%\",\n            },\n            xAxis: {\n              type: \"category\",\n              data: this.sevenDate,\n            },\n            yAxis: {\n              type: \"value\",\n            },\n            series: [\n              {\n                data: res.data.data,\n                type: \"line\",\n              },\n            ],\n          };\n          // 使用刚指定的配置项和数据显示图表。\n          myChart.setOption(option);\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    },\n  },\n  mounted() {\n    this.orderPeople();\n    this.orderGender();\n    this.orderSection();\n    this.patientAge();\n  },\n  created() {\n    //获取过去7天日期\n    for (var i = 20; i > 0; i--) {\n      this.sevenDate.push(this.pastSeven(i));\n    }\n  },\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/views"}]}