{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\HospitalManager\\src\\HospitalManagerVue\\node_modules\\babel-loader\\lib\\index.js!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\HospitalManager\\src\\HospitalManagerVue\\src\\utils\\request.js","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\HospitalManager\\src\\HospitalManagerVue\\src\\utils\\request.js","mtime":1617110830000},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\HospitalManager\\src\\HospitalManagerVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689001367240},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\HospitalManager\\src\\HospitalManagerVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1689001368654}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICJAL3V0aWxzL3N0b3JhZ2UuanMiOyAvL+WFqOWxgOWumuS5ieS4gOS4quWNleS+i+eahGF4aW9z5a+56LGhCgpjb25zdCByZXF1ZXN0ID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAiIiwKICB0aW1lb3V0OiA4MDAwCn0pOyAvL+WFqOWxgOaLpuaIquWZqO+8jOaJgOacieivt+axgumDveS8muWFiOaJp+ihjOi/meS4qgoKcmVxdWVzdC5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoY29uZmlnID0+IHsKICAvLyBEbyBzb21ldGhpbmcgYmVmb3JlIHJlcXVlc3QgaXMgc2VudAogIGNvbnN0IHRva2VuID0gZ2V0VG9rZW4oKTsKCiAgaWYgKHRva2VuICE9PSBudWxsKSB7CiAgICAvL+WcqOivt+axgueahOWktOmDqOWKoOWFpXRva2VuCiAgICBjb25maWcuaGVhZGVyc1sidG9rZW4iXSA9IHRva2VuOwogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZXJyb3IgPT4gewogIC8vIERvIHNvbWV0aGluZyB3aXRoIHJlcXVlc3QgZXJyb3IKICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwp9KTsgLy8g5a+85Ye6YXhpb3Plr7nosaEKCmV4cG9ydCBkZWZhdWx0IHJlcXVlc3Q7"},{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/HospitalManager/src/HospitalManagerVue/src/utils/request.js"],"names":["axios","getToken","request","create","baseURL","timeout","interceptors","use","config","token","headers","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,oBAAvB,C,CAEA;;AACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC3BC,EAAAA,OAAO,EAAE,EADkB;AAE3BC,EAAAA,OAAO,EAAE;AAFkB,CAAb,CAAhB,C,CAIA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiCC,MAAM,IAAI;AACzC;AACA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;;AACA,MAAGQ,KAAK,KAAK,IAAb,EAAkB;AACd;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAe,OAAf,IAA0BD,KAA1B;AACH;;AACD,SAAOD,MAAP;AACC,CARH,EAQIG,KAAK,IAAI;AACX;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACC,CAXH,E,CAYA;;AACA,eAAeT,OAAf","sourcesContent":["import axios from \"axios\"\nimport {getToken} from \"@/utils/storage.js\";\n\n//全局定义一个单例的axios对象\nconst request = axios.create({\n  baseURL: \"\",\n  timeout: 8000\n});\n//全局拦截器，所有请求都会先执行这个\nrequest.interceptors.request.use(config => {\n  // Do something before request is sent\n  const token = getToken();\n  if(token !== null){\n      //在请求的头部加入token\n      config.headers[\"token\"] = token;\n  }\n  return config;\n  },error => {\n  // Do something with request error\n  return Promise.reject(error);\n  });\n// 导出axios对象\nexport default request;"]}]}